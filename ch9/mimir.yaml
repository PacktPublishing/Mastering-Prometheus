apiVersion: apps/v1
kind: Deployment
metadata:
  labels: 
    app.kubernetes.io/instance: mastering-prometheus
    app.kubernetes.io/name: mimir
  name: mimir
  namespace: prometheus
spec:
  replicas: 1
  selector:
    matchLabels: 
      app.kubernetes.io/instance: mastering-prometheus
      app.kubernetes.io/name: mimir
  template:
    metadata:
      labels: 
        app.kubernetes.io/instance: mastering-prometheus
        app.kubernetes.io/name: mimir
    spec:
      containers:
        - image: grafana/mimir:2.9.2
          name: mimir
          args:
            - "-common.storage.filesystem.dir=/data"
            - "-ruler.rule-path=/data/ruler"
            - "-blocks-storage.filesystem.dir=/data/ingester"
            - "-ingester.ring.replication-factor=1"
            - "-distributor.ha-tracker.enable-for-all-users=true"
            - "-distributor.ha-tracker.store=inmemory"
            - "-distributor.ha-tracker.enable=true"
            - "-distributor.ha-tracker.cluster=prometheus"
            - "-distributor.ha-tracker.replica=prometheus_replica"
          ports:
            - containerPort: 8080
              name: mimir
              protocol: TCP
          volumeMounts:
            - mountPath: /data
              name: mimir-data
      volumes:
        - emptyDir: {}
          name: mimir-data
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: mastering-prometheus
    app.kubernetes.io/name: mimir
  name: mastering-prometheus-mimir
  namespace: prometheus
spec:
  ports:
  - name: http-web
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/instance: mastering-prometheus
    app.kubernetes.io/name: mimir
